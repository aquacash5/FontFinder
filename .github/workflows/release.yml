# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Release Executable

on:
  release:
    types: [created]

jobs:
  release-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      # TODO: When actions/setup-node fixes https://github.com/actions/setup-node/issues/150
      #       Move id: node-setup to actions/setup-node and remove echo
      - name: Setup Node 15
        uses: actions/setup-node@v1
        with:
          node-version: 15
          registry-url: https://npm.pkg.github.com/
      - name: Store exact Node version
        id: node-setup
        run: echo "::set-output name=version::$(node -v)"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ steps.node-setup.outputs.version }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install node_modules
        run: npm ci
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
      - name: Electron Builder
        run: npm run dist
        env:
          CSC_LINK: ${{ secrets.WINDOWS_CERTS }}
          CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_CERTS_PASSWORD }}
      - name: Upload Release Assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "publish/*"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      # TODO: When actions/setup-node fixes https://github.com/actions/setup-node/issues/150
      #       Move id: node-setup to actions/setup-node and remove echo
      - name: Setup Node 15
        uses: actions/setup-node@v1
        with:
          node-version: 15
          registry-url: https://npm.pkg.github.com/
      - name: Store exact Node version
        id: node-setup
        run: echo "::set-output name=version::$(node -v)"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ steps.node-setup.outputs.version }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install node_modules
        run: npm ci
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
      - name: Electron Builder
        run: npm run dist
        # env:
        #   CSC_LINK: ${{ secrets.WINDOWS_CERTS }}
        #   CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_CERTS_PASSWORD }}
      - name: Upload Release Assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "publish/*"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  release-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # TODO: When actions/setup-node fixes https://github.com/actions/setup-node/issues/150
      #       Move id: node-setup to actions/setup-node and remove echo
      - name: Setup Node 15
        uses: actions/setup-node@v1
        with:
          node-version: 15
          registry-url: https://npm.pkg.github.com/
      - name: Store exact Node version
        id: node-setup
        run: echo "::set-output name=version::$(node -v)"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ steps.node-setup.outputs.version }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install node_modules
        run: npm ci
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
      - name: Electron Builder
        run: npm run dist
      - name: Upload Release Assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "publish/*"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
